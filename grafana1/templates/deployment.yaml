apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: grafana
spec:
  selector:
    matchLabels:
      app: grafana
  replicas: {{ .Values.replicaCount }}
  serviceName: grafana-hs
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  updateStrategy:
    type: {{ .Values.updateStrategy.type }}
  template:
    metadata:
      labels:
        app: grafana
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - grafana
              topologyKey: "kubernetes.io/hostname"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
             - weight: 1
               podAffinityTerm:
                 labelSelector:
                   matchExpressions:
                     - key: "app"
                       operator: In
                       values:
                       - grafana
                 topologyKey: "kubernetes.io/hostname"
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      containers:
        - name: grafana
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          resources:
            requests:
              memory: {{ .Values.cresources.requests.memory }}
              cpu: {{ .Values.cresources.requests.cpu }}          
          ports:
            - containerPort: {{ .Values.containerPort }}
              name: server
          env:
            - name: GF_SERVER_ROOT_URL
              value: "http://dev-4.mintoak.com"            
          volumeMounts:
          - name: datadir
            mountPath: /var/lib/grafana/
      securityContext:
        runAsUser: 472
        runAsGroup: 472
        fsGroup: 472
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.resources.requests.storage }}
